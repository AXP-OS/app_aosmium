#####################################################################################
# documentation:
# - https://docs.gitea.com/usage/actions/overview
# - https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
#####################################################################################

name: Build AOSmium

on:
  push:
    paths:
      - trigger-build.txt
  workflow_dispatch:  # button shown only when in default branch

# NOT implemented in Gitea!
#permissions:
#  contents: write # allow creating releases

jobs:
  build:
    runs-on: docker-node-chromium
    outputs:
      APP_VERSION: ${{ steps.vars.outputs.APP_VERSION }}
      SHA32_WV: ${{ steps.hash.outputs.SHA32_WV }}
      SHA64_WV: ${{ steps.hash.outputs.SHA64_WV }}
      SHA32_BRW: ${{ steps.hash.outputs.SHA32_BRW }}
      SHA64_BRW: ${{ steps.hash.outputs.SHA64_BRW }}
      git_sha_short:  ${{ steps.ver.outputs.git_sha_short }}
      upload_art_id: ${{ steps.upload.outputs.artifact-id }}
    container:
      #options: --user root  # we need all privileges within the container
      #options: --memory 80g
      volumes:
        - /home/aosp/docker_vols/aosmium:/workspace/AXP.OS/app_aosmium/aosmium
        - /home/aosp/docker_vols/vanadium:/workspace/AXP.OS/app_aosmium/vanadium
        - /home/aosp/docker_vols/chromium:/workspace/AXP.OS/app_aosmium/chromium
        - /home/aosp/docker_vols/tools:/workspace/AXP.OS/app_aosmium/tools
    steps:

    - name: Prep container
      shell: bash
      run: apt-get update && apt-get -y install git-lfs curl lsb-release python3 file gperf sudo gcc-multilib

    - uses: actions/checkout@v4
      with:
        submodules: true
        clean: true
        fetch-depth: 1
        lfs: true
        path: aosmium

    - name: Checkout AOSmium repos
      shell: bash
      id: vanco
      run: |
        git config --global user.name "gitea-actions[bot]"
        git config --global user.email "<sherlock@binbash.rocks>"

        if [ ! -d "${{ github.workspace }}/vanadium/.git" ];then
          echo "Cloning Vanadium as ${{ github.workspace }}/vanadium is not a repo"
          git clone ${{ vars.VANADIUM_REPO_SERVER }}/${{ vars.VANADIUM_REPO_NAME }} ${{ github.workspace }}/vanadium
        else
          git config --global --add safe.directory ${{ github.workspace }}/vanadium
          cd vanadium
          git add -A
          git reset --hard
          git fetch --all
          echo "vanadium commit: $(git log -1)"
          cd ..
        fi
        
        cd vanadium
        latestVanadium=$(git tag | cut -d '/' -f3 |grep -v '{' | sort -Vr | head -n 1)
        webview_ver=$(echo "${latestVanadium}" | cut -d '.' -f 1-4)
        echo "WV_VER=$webview_ver" >> $GITHUB_ENV

    - name: "Build arm"
      shell: bash
      run: |
        cd aosmium
        source trigger-build.txt
        ./build.sh -V ${{ github.workspace }}/vanadium -C ${{ github.workspace }}/chromium -a arm

    - name: "Build arm64"
      shell: bash
      run: |
        cd aosmium
        source trigger-build.txt
        
        # never do a sync+patch again
        # (as this is handled in the previous step already)
        export clean=0 gsync=0
        ./build.sh -V ${{ github.workspace }}/vanadium -C ${{ github.workspace }}/chromium -a arm64

    - name: "Prep APKs"
      shell: bash
      run: |
        cd aosmium
        source trigger-build.txt
        mkdir apks

        cp prebuilt/arm/web*.apk apks/webview32.apk
        cp prebuilt/arm64/web*.apk apks/webview64.apk
        cp prebuilt/arm/browser*.apk apks/browser32.apk
        cp prebuilt/arm64/browser*.apk apks/browser64.apk

    # https://github.com/marketplace/actions/sign-android-releases-apk
    - name: Sign APK
      id: signAPK
      uses: NoCrypt/sign-android@main
      with:
        releaseDir: apks
        signingKey: ${{ secrets.APK_SIGNING_KEY_64 }}
        keyAlias: ${{ secrets.APK_ALIAS }}
        keyStorePassword: ${{ secrets.APK_KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.APK_KEY_PASSWORD }}

    - name: Prep release
      id: hash
      run: |
        cd apks
        sha512sum webview32-signed.apk > webview32-signed.apk.sha512
        sha512sum webview64-signed.apk > webview64-signed.apk.sha512
        sha512sum browser32-signed.apk > browser32-signed.apk.sha512
        sha512sum browser64-signed.apk > browser64-signed.apk.sha512

        echo "SHA32_WV=$(cat webview32-signed.apk.sha512 | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
        echo "SHA64_WV=$(cat webview64-signed.apk.sha512 | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
        echo "SHA32_BRW=$(cat browser32-signed.apk.sha512 | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
        echo "SHA64_BRW=$(cat browser64-signed.apk.sha512 | cut -d ' ' -f1)" >> $GITHUB_OUTPUT

    - name: Upload all files as artifact
      uses: actions/upload-artifact@v3
      id: upload
      with:
        name: release-artifact
        retention-days: 1
        if-no-files-found: error
        path: |
            ${{ steps.signAPK.outputs.signedFile0 }}
            ${{ steps.signAPK.outputs.signedFile0 }}.sha512
            ${{ steps.signAPK.outputs.signedFile1 }}
            ${{ steps.signAPK.outputs.signedFile1 }}.sha512
            ${{ steps.signAPK.outputs.signedFile2 }}
            ${{ steps.signAPK.outputs.signedFile2 }}.sha512
            ${{ steps.signAPK.outputs.signedFile3 }}
            ${{ steps.signAPK.outputs.signedFile3 }}.sha512

  release-codeberg:
    name: "Release @Codeberg"
    uses: https://codeberg.org/AXP-OS/actions/.gitea/workflows/release_mirror_main.yaml@main
    runs-on: docker-node-latest
    needs: build
    secrets: inherit
    with:
      workflow_id: ${{ github.run_id }}
      repo: ${{ github.event.repository.name }} # without org!
      title: "!UNTESTED PRE-RELEASE! ${{ needs.build.outputs.APP_VERSION }}"
      tag: ${{ needs.build.outputs.APP_VERSION }}
      targetc: main
      pre: true
      #filepattern: '*.apk'
      body: |
          # AOSmium -The AXP.OS Browser

          See:
          - [Documentation](https://axpos.org/docs/knowledge/browser/)
          - [Signature](https://axpos.org/docs/knowledge/signatures/#axpos-app-signature)

          |APK|sha512|
          |-|-|
          |webview32-signed.apk|${{ needs.build.outputs.SHA32_WV }}|
          |webview64-signed.apk|${{ needs.build.outputs.SHA64_WV }}|
          |browser32-signed.apk|${{ needs.build.outputs.SHA32_BRW }}|
          |browser64-signed.apk|${{ needs.build.outputs.SHA64_BRW }}|

          [Signature](${{ vars.SIGNATURE_LINK }})

  release-github:
    name: "Release @github"
    uses: https://codeberg.org/AXP-OS/actions/.gitea/workflows/release_mirror_second.yaml@main
    runs-on: docker-node-latest
    needs: [ build, release-codeberg ]
    secrets: inherit
    with:
      workflow_id: ${{ github.run_id }}
      repo: ${{ github.event.repository.name }} # without org!
      title: "!UNTESTED PRE-RELEASE! ${{ needs.build.outputs.APP_VERSION }}"
      tag: ${{ needs.build.outputs.APP_VERSION }}
      targetc: main
      pre: true
      #filepattern: '*.apk'
      body: >-
          # AOSmium -The AXP.OS Browser\n
          \n
          See:\n
          - [Documentation](https://axpos.org/docs/knowledge/browser/)\n
          - [Signature](https://axpos.org/docs/knowledge/signatures/#axpos-app-signature)\n
          \n
          |APK|sha512|\n
          |-|-|\n
          |webview32-signed.apk|${{ needs.build.outputs.SHA32_WV }}|\n
          |webview64-signed.apk|${{ needs.build.outputs.SHA64_WV }}|\n
          |browser32-signed.apk|${{ needs.build.outputs.SHA32_BRW }}|\n
          |browser64-signed.apk|${{ needs.build.outputs.SHA64_BRW }}|\n
          \n
          [Signature](${{ vars.SIGNATURE_LINK }})
      filelist: >-
          browser32-signed.apk
          browser32-signed.apk.sha512
          browser64-signed.apk
          browser64-signed.apk.sha512
          webview32-signed.apk
          webview32-signed.apk.sha512
          webview64-signed.apk
          webview64-signed.apk.sha512


  mirror:
    needs: build
    uses: ./.gitea/workflows/mirror.yaml
    runs-on: docker-node-latest
    secrets: inherit